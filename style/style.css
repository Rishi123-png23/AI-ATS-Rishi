import React, { useState, useEffect } from 'react';
import { LineChart, AreaChart, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Line, Area } from 'recharts';
import { Mail, Phone, Globe, GitHub, Linkedin } from 'lucide-react';

// Define all styles as a styled object that will be injected into the head
const styles = `
/* ===== Base Animations ===== */
@keyframes slideDown {
    from { transform: translateY(-100%); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
}

@keyframes float {
    0% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
    100% { transform: translateY(0px); }
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
}

@keyframes fillProgress {
    from { width: 0; }
    to { width: var(--progress); }
}

/* ===== Glass Morphism Effects ===== */
.glass-card {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 16px;
    padding: 2rem;
    box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
}

/* ===== Feature & Stats Cards ===== */
.feature-card {
    transition: all 0.3s ease;
    border-radius: 12px;
    background: linear-gradient(145deg, #ffffff, #f0f0f0);
    box-shadow: 5px 5px 15px #d1d1d1, -5px -5px 15px #ffffff;
}

.feature-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
}

/* ===== Progress Bar ===== */
.progress-bar {
    position: relative;
    height: 8px;
    background: #e0e0e0;
    border-radius: 4px;
    overflow: hidden;
}

.progress-bar::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: var(--progress);
    background: linear-gradient(90deg, #00B8D4, #0288D1);
    animation: fillProgress 1s ease-out;
}

/* ===== Modern Upload Area ===== */
.modern-upload {
    border: 2px dashed #00B8D4;
    border-radius: 12px;
    padding: 2rem;
    text-align: center;
    transition: all 0.3s ease;
    background: rgba(0, 184, 212, 0.05);
}

.modern-upload:hover {
    background: rgba(0, 184, 212, 0.1);
    border-color: #0288D1;
}

/* ===== Chat Interface ===== */
.chat-container {
    max-height: 500px;
    overflow-y: auto;
    padding: 1rem;
    border-radius: 12px;
    background: #f8f9fa;
}

.chat-message {
    margin: 1rem 0;
    padding: 1rem;
    border-radius: 12px;
    animation: fadeIn 0.3s ease-out;
}

.user-message {
    background: #e3f2fd;
    margin-left: 20%;
    border-radius: 12px 12px 0 12px;
}

.ai-message {
    background: #f5f5f5;
    margin-right: 20%;
    border-radius: 12px 12px 12px 0;
}

/* ===== Responsive Design ===== */
@media (max-width: 768px) {
    .feature-card {
        margin: 1rem 0;
    }
    
    .stats-card {
        margin: 0.5rem 0;
    }
    
    .chat-message {
        margin: 0.5rem 0;
    }
}
`;

// Inject styles into document head
const StyleInjector = () => {
  useEffect(() => {
    const styleElement = document.createElement('style');
    styleElement.innerHTML = styles;
    document.head.appendChild(styleElement);
    return () => document.head.removeChild(styleElement);
  }, []);
  return null;
};

// Animated Welcome Banner Component
const WelcomeBanner = () => {
  return (
    <div className="w-full bg-gradient-to-r from-blue-500 to-cyan-400 p-8 rounded-lg shadow-lg mb-8">
      <div className="max-w-4xl mx-auto text-white">
        <h1 className="text-4xl font-bold mb-4 animate-fade-in">
          Welcome to AIonOS Enterprise ATS
        </h1>
        <p className="text-xl opacity-90">
          Next-Generation Talent Acquisition & Analysis Platform
        </p>
      </div>
    </div>
  );
};

// Animated Stats Card Component
const StatsCard = ({ title, value, icon: Icon }) => {
  const [count, setCount] = useState(0);
  
  useEffect(() => {
    const duration = 2000;
    const steps = 60;
    const increment = value / steps;
    let current = 0;
    
    const timer = setInterval(() => {
      current += increment;
      if (current >= value) {
        setCount(value);
        clearInterval(timer);
      } else {
        setCount(Math.floor(current));
      }
    }, duration / steps);
    
    return () => clearInterval(timer);
  }, [value]);

  return (
    <div className="p-6 bg-white rounded-lg shadow-lg hover:shadow-xl transition-all duration-300">
      <div className="flex items-center justify-between">
        <div>
          <p className="text-gray-500 text-sm">{title}</p>
          <h3 className="text-2xl font-bold text-gray-800">{count}</h3>
        </div>
        <Icon className="text-blue-500 w-8 h-8" />
      </div>
    </div>
  );
};

// Modern File Upload Component
const FileUploadCard = ({ onFileSelect }) => {
  const [dragActive, setDragActive] = useState(false);
  
  const handleDrag = (e) => {
    e.preventDefault();
    e.stopPropagation();
    if (e.type === "dragenter" || e.type === "dragover") {
      setDragActive(true);
    } else if (e.type === "dragleave") {
      setDragActive(false);
    }
  };

  return (
    <div
      className={`modern-upload ${dragActive ? "border-blue-500 bg-blue-50" : ""}`}
      onDragEnter={handleDrag}
      onDragLeave={handleDrag}
      onDragOver={handleDrag}
    >
      <input
        type="file"
        className="hidden"
        onChange={(e) => onFileSelect(e.target.files[0])}
        id="file-upload"
      />
      <label
        htmlFor="file-upload"
        className="cursor-pointer flex flex-col items-center"
      >
        <svg
          className="w-12 h-12 text-gray-400 mb-4"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="2"
            d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"
          />
        </svg>
        <p className="text-gray-600">
          Drag and drop your files here or{" "}
          <span className="text-blue-500">browse</span>
        </p>
      </label>
    </div>
  );
};

// Chat Interface Component
const ChatInterface = () => {
  const [messages, setMessages] = useState([]);
  const [input, setInput] = useState('');

  const handleSend = () => {
    if (input.trim()) {
      setMessages([...messages, { text: input, type: 'user' }]);
      setInput('');
      // Simulate AI response
      setTimeout(() => {
        setMessages(prev => [...prev, {
          text: "Thank you for your message. I'm processing your request.",
          type: 'ai'
        }]);
      }, 1000);
    }
  };

  return (
    <div className="chat-container">
      <div className="h-96 overflow-y-auto p-4 space-y-4">
        {messages.map((message, index) => (
          <div
            key={index}
            className={`chat-message ${
              message.type === 'user' ? 'user-message' : 'ai-message'
            }`}
          >
            {message.text}
          </div>
        ))}
      </div>
      <div className="p-4 border-t">
        <div className="flex space-x-2">
          <input
            type="text"
            value={input}
            onChange={(e) => setInput(e.target.value)}
            className="flex-1 p-2 border rounded-lg"
            placeholder="Type your message..."
          />
          <button
            onClick={handleSend}
            className="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors"
          >
            Send
          </button>
        </div>
      </div>
    </div>
  );
};

// Analytics Dashboard Component
const AnalyticsDashboard = () => {
  const sampleData = [
    { name: 'Jan', value: 400 },
    { name: 'Feb', value: 300 },
    { name: 'Mar', value: 600 },
    { name: 'Apr', value: 800 },
    { name: 'May', value: 500 }
  ];

  return (
    <div className="glass-card">
      <h2 className="text-xl font-bold mb-4">Analytics Overview</h2>
      <div className="w-full h-64">
        <LineChart width={600} height={200} data={sampleData}>
          <CartesianGrid strokeDasharray="3 3" />
          <XAxis dataKey="name" />
          <YAxis />
          <Tooltip />
          <Legend />
          <Line type="monotone" dataKey="value" stroke="#00B8D4" />
        </LineChart>
      </div>
    </div>
  );
};

// Main App Component
const EnterpriseATS = () => {
  return (
    <div className="min-h-screen bg-gray-50">
      <StyleInjector />
      <WelcomeBanner />
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
          <StatsCard title="Total Applications" value={1234} icon={Mail} />
          <StatsCard title="Active Positions" value={45} icon={Globe} />
          <StatsCard title="Time to Hire (days)" value={28} icon={Clock} />
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">
          <FileUploadCard onFileSelect={console.log} />
          <AnalyticsDashboard />
        </div>
        <ChatInterface />
      </div>
    </div>
  );
};

export default EnterpriseATS;
